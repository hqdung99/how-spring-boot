/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.2).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.example.api;

import org.example.model.User;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-10T16:53:26.251377+07:00[Asia/Ho_Chi_Minh]")

@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "delete user", nickname = "deleteUser", notes = "", tags={ "AppApi", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "delete user successful") })
    @RequestMapping(value = "/user/{userId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> _deleteUser(@ApiParam(value = "user id",required=true) @PathVariable("userId") Long userId) {
        return deleteUser(userId);
    }

    // Override this method
    default  ResponseEntity<Void> deleteUser(Long userId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Get a single user", nickname = "getUserById", notes = "", response = User.class, tags={ "AppApi", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Get user by id successful", response = User.class) })
    @RequestMapping(value = "/user/{userId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<User> _getUserById(@ApiParam(value = "user id",required=true) @PathVariable("userId") Long userId) {
        return getUserById(userId);
    }

    // Override this method
    default  ResponseEntity<User> getUserById(Long userId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Huynh\", \"lastName\" : \"Dung\", \"id\" : 0, \"email\" : \"hqdung99@gmail.com\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Update user", nickname = "updateUser", notes = "", response = User.class, tags={ "AppApi", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "update user successful", response = User.class) })
    @RequestMapping(value = "/user/{userId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<User> _updateUser(@ApiParam(value = "user id",required=true) @PathVariable("userId") Long userId,@ApiParam(value = ""  )  @Valid @RequestBody User user) {
        return updateUser(userId, user);
    }

    // Override this method
    default  ResponseEntity<User> updateUser(Long userId, User user) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Huynh\", \"lastName\" : \"Dung\", \"id\" : 0, \"email\" : \"hqdung99@gmail.com\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
